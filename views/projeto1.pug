doctype html
html(lang="pt-BR")
  head
    title Monitoramento de Animais
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    link(rel="stylesheet" href="/css/design-system.css")
    link(rel="stylesheet" href="/css/projeto1.css")
    include ./partials/styles.pug
    script(src="/components/user-settings/settings.js")

  body
    include ./partials/navbar.pug

    .container
      .page-header
        h1.page-title Monitoramento de Animais
        p.page-subtitle Sistema de cadastro e monitoramento para identificação e controle de acesso de animais via RFID

      if error
        .alert.alert-error= error
      if success
        .alert.alert-success= success

      .main-grid
        //- Card de Cadastro
        .card.form-card
          h3.card-title Cadastrar Animal
          form#register-form(action="/projeto1/register" method="POST")
            .form-group
              label(for="identifier") Identificador do animal
              input.input#identifier(type="text" name="identifier" placeholder="Ex: A123" required)
            .form-group
              label(for="nome") Nome do animal
              input.input#nome(type="text" name="nome" placeholder="Ex: Rex")
            .form-group
              label(for="especie") Espécie
              input.input#especie(type="text" name="especie" placeholder="Ex: Cachorro")
            .form-group
              label(for="idade") Idade
              input.input#idade(type="number" name="idade" placeholder="Ex: 5")
            .form-group
              label(for="allowed") Permitir Acesso?
              select.select#allowed(name="allowed" required)
                option(value="" disabled selected) Selecione uma opção
                option(value="sim") Sim
                option(value="nao") Não
            button.button(type="submit") Cadastrar

        //- Card da Lista de Animais
        .card.animals-list-card
          h3.card-title Animais Registrados
          if registros && registros.length > 0
            .animals-list
              each registro in registros
                - const valorPeso = (registro.peso && registro.peso.peso) ? registro.peso.peso : 'Não recebido'
                .animal-item
                  .animal-header
                    .animal-id= registro.identifier
                    .animal-status(class=registro.allowed === 'sim' ? 'status-allowed' : 'status-denied')
                      .status-indicator
                      span.status-text= registro.allowed === 'sim' ? 'Permitido' : 'Negado'
                  .animal-details
                    div
                      | Nome: 
                      span= registro.nome || 'N/A'
                    div
                      | Espécie: 
                      span= registro.especie || 'N/A'
                    div
                      | Idade: 
                      span= registro.idade || 'N/A'
                    div
                      | Peso (kg): 
                      span(id=`peso-${registro.identifier}`)= valorPeso
                    div
                      | Cadastrado por: 
                      span= registro.registradoPor || 'N/A'
                    div
                      | Atualizado em: 
                      span(id=`data-${registro.identifier}`)= registro.dataPesoAtualizado ? new Date(registro.dataPesoAtualizado).toLocaleString("pt-BR") : 'Sem registro'
                  .animal-footer
                    form(action='/projeto1/delete/' + registro.identifier method="POST")
                      button.delete-button(type="submit") Excluir
          else
            .empty-state
              p Nenhum animal registrado ainda.

      .history-section
        a.history-button(href="/projeto1/history") Ver Histórico Completo

    if user
      include ../components/user-settings/settings.pug

    script(src="/components/user-settings/settings.js")
    script(src="/socket.io/socket.io.js")
    script.
      const socket = io();
      socket.on('pesoAtualizado', function(data) {
        console.log("Recebido via socket:", data);
        const pesoSpan = document.getElementById(`peso-${data.identifier}`);
        const dataSpan = document.getElementById(`data-${data.identifier}`);
        
        if (pesoSpan) {
          pesoSpan.textContent = data.peso;
        }
        if (dataSpan) {
          const dataFormatada = new Date().toLocaleString("pt-BR");
          dataSpan.textContent = dataFormatada;
        }
      });
      socket.on('connect', () => console.log('Socket.IO conectado'));
      socket.on('disconnect', () => console.log('Socket.IO desconectado'));
